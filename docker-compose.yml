version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.9.29-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432:80'

  redis:
    image: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6380:6379
    volumes:
      - ./redis/data:/data

  auth:
      build:
        context: ./
        dockerfile: ./apps/auth/Dockerfile
      env_file:
        - .env
      depends_on:
        - rabbitmq
        - postgres
      volumes:
        - .:/usr/src/app 
        - /usr/src/app/node_modules
      command: yarn start:dev auth 

  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: yarn start:dev api

  presence:
    build:
      context: ./
      dockerfile: ./apps/presence/Dockerfile
    ports:
      - '6000:6000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev presence 

  chat:
    build:
      context: ./
      dockerfile: ./apps/chat/Dockerfile
    ports:
      - '7000:7000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - presence
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev chat 



